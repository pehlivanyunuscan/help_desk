// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "email": "support@helpdesk.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/fault-reports": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve all fault reports from the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fault Reports"
                ],
                "summary": "Get all fault reports",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetFaultReportsSuccess"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.UnauthorizedError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.RetrieveReportsError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new fault report in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fault Reports"
                ],
                "summary": "Create a new fault report",
                "parameters": [
                    {
                        "description": "Fault report data",
                        "name": "fault-report",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateFaultReportRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.CreateFaultReportSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.MissingFieldsError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.UnauthorizedError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.CreateReportError"
                        }
                    }
                }
            }
        },
        "/fault-reports/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a specific fault report by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fault Reports"
                ],
                "summary": "Get fault report by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fault Report ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetFaultReportSuccess"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.UnauthorizedError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ReportNotFoundError"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticate user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.InvalidCredentialsError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.TokenGenerationError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CreateFaultReportRequest": {
            "type": "object",
            "properties": {
                "asset": {
                    "type": "string"
                },
                "clock": {
                    "type": "integer"
                },
                "machine_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user_description": {
                    "type": "string"
                }
            }
        },
        "models.CreateFaultReportSuccess": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Fault report created successfully"
                },
                "report": {
                    "$ref": "#/definitions/models.ReportData"
                }
            }
        },
        "models.CreateReportError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Could not create fault report"
                }
            }
        },
        "models.FaultReport": {
            "type": "object",
            "properties": {
                "asset": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "machine_id": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "reported_by": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_description": {
                    "type": "string"
                }
            }
        },
        "models.GetFaultReportSuccess": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.FaultReport"
                },
                "message": {
                    "type": "string",
                    "example": "Fault report retrieved successfully"
                }
            }
        },
        "models.GetFaultReportsSuccess": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "example": 5
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.FaultReport"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Fault reports retrieved successfully"
                }
            }
        },
        "models.InvalidCredentialsError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid credentials"
                }
            }
        },
        "models.InvalidRequestError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid request"
                }
            }
        },
        "models.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "yunus"
                },
                "username": {
                    "type": "string",
                    "example": "yunus"
                }
            }
        },
        "models.LoginResponse": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string",
                    "example": "2025-10-03T20:30:00Z"
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "models.MissingFieldsError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Missing required fields"
                }
            }
        },
        "models.ParseJSONError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Cannot parse JSON"
                }
            }
        },
        "models.ReportData": {
            "type": "object",
            "properties": {
                "asset": {
                    "type": "string",
                    "example": "Conveyor Belt A1"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "machine_id": {
                    "type": "string",
                    "example": "MCH001"
                },
                "priority": {
                    "type": "string",
                    "example": "High"
                },
                "reported_by": {
                    "type": "string",
                    "example": "john_doe"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2025-10-03T08:30:00Z"
                },
                "title": {
                    "type": "string",
                    "example": "Machine malfunction"
                },
                "user_description": {
                    "type": "string",
                    "example": "Machine stopped working"
                }
            }
        },
        "models.ReportNotFoundError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Fault report not found"
                }
            }
        },
        "models.RetrieveReportsError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Could not retrieve fault reports"
                }
            }
        },
        "models.TokenGenerationError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Could not generate token"
                }
            }
        },
        "models.UnauthorizedError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Unauthorized"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Enter your JWT token in the format: Bearer \u003cyour_token_here\u003e",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "10.67.67.22:3000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Help Desk API",
	Description:      "Help Desk API for fault reporting system",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
